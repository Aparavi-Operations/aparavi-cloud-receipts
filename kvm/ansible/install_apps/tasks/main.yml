---
- name: Set virt_install_vm_installed to false
  set_fact:
    virt_install_vm_installed:
      False

- name: Display debug vars
  debug:
    msg:
      - "vm = {{ vm|default('not set (undefined)') }}"
      - "virt_install_vm = {{ virt_install_vm|default('not set (undefined)') }}"
  tags:
    - debug
    - never

- name: Detect if the vm is already defined
  block:
    - name: Get the vm status
      virt:
        command: status
        name: "{{ vm.hostname }}"
      register:
        _vmStatus
      ignore_errors: yes
  rescue:
    - debug:
        msg:
          - "Failed to get the vm status"
          - "Which is a good thing"

- name: Display the status
  debug:
    msg: "_vmStatus: {{ _vmStatus }}"
  tags:
    - debug
    - never
        
- name: Deploy the virtual machine
  block:
    - name: Fail if the vm is already defined
      fail:
        msg:
          - "Sorry, {{ vm.hostname }} is already defined"
      when:
        - not _vmStatus.failed
        - _vmStatus.exception.msg is not regex(".*not found.*")

    - name: "Include role"
      include_role:
        name: "{{ myrole }}"
      loop:
        - libvirt
        - qemu_img
        - cloud_localds
        - virt_install_import
      loop_control:
        loop_var: myrole

    - name: Set virt_install_vm_installed to true
      set_fact:
        virt_install_vm_installed:
          True
  when:
    - not virt_install_vm.skip_if_deployed|default(false) or
      _vmStatus.status is not defined

- name: Display virt_install_vm_installed
  debug:
    msg:
      - "virt_install_vm_installed: {{ virt_install_vm_installed }}"
  tags:
    - never
    - debug
